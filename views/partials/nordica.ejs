<div id="nordica" class="full-width-div bg-dark text-light  border-top" style="top:400%;">
	<div class="container pt-5 w-100">
		<div class="pt-3 pb-3 row justify-content-center">
			<div class="col-6 align-self-center text-center bg-light rounded">
				<img src="./images/logoNordica.png" >
				<h4 class="border-top text-secondary">10.2016 - 02.2017</h4>
			</div>
				
		</div>
		


		<div class="row pt-5 justify-content-around">
			<div class="col-6 bg-blackTranparent2 rounded p-3">
				<canvas id="nordicaChart" ></canvas>
			</div>
			<div class="col-6 bg-dark rounded p-3">
				<p>
					Analysis/Development in Qlikview using SQL Server and Teradata.
					Create analysis for high-level focused in create dashboards with a deep analysis using the data from IMS and CloseUp
				</p>
			</div>
		</div>

	</div>
</div>


<script>

window.chartColors = {
	red: 'rgb(255, 99, 132)',
	orange: 'rgb(255, 159, 64)',
	yellow: 'rgb(255, 205, 86)',
	green: 'rgb(75, 192, 192)',
	blue: 'rgb(54, 162, 235)',
	purple: 'rgb(153, 102, 255)',
	grey: 'rgb(201, 203, 207)'
};


		var randomScalingFactor = function() {
			return Math.round(Math.random() * 90);
		};

		var config = {
			type: 'bar',
			data: {
				datasets: [{
					data: [
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
					],
					backgroundColor: [
						"rgb(0,100,0)",
						"rgb(0,128,0)",
						"rgb(0,156,0)",
						"rgb(0,212,0)",
						"rgb(0,230,0)",
						"rgb(0,70,0)",
						"rgb(0,80,0)"
					],
					label: 'Dataset'
				}],
				labels: [
					'N',
					'O',
					'R',
					'D',
					'I',
					'C',
					'A'
				]
			},
			options: {
				responsive: true,
				legend: {
		            display: false
		        }
			}
		};

		Chart.defaults.global.defaultFontColor = 'white';

		window.onload = function() {
			var ctx = document.getElementById('nordicaChart');
			window.pieChart = new Chart(ctx, config);

			setInterval(function() {
			config.data.datasets.forEach(function(dataset) {
				dataset.data = dataset.data.map(function() {
					return randomScalingFactor();
				});
			});

			window.pieChart.update();

		}, 1000);
		};

		


	

		/*
		document.getElementById('addDataset').addEventListener('click', function() {
			var newDataset = {
				backgroundColor: [],
				data: [],
				label: 'New dataset ' + config.data.datasets.length,
			};

			for (var index = 0; index < config.data.labels.length; ++index) {
				newDataset.data.push(randomScalingFactor());

				var colorName = colorNames[index % colorNames.length];
				var newColor = window.chartColors[colorName];
				newDataset.backgroundColor.push(newColor);
			}

			config.data.datasets.push(newDataset);
			window.myPie.update();
		});

		document.getElementById('removeDataset').addEventListener('click', function() {
			config.data.datasets.splice(0, 1);
			window.myPie.update();
		});
	
	*/



</script>